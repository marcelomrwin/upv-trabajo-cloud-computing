apiVersion: apps/v1
kind: Deployment
metadata:  
  labels:    
    app.kubernetes.io/name: postgres-keycloak
    app.kubernetes.io/part-of: {{ .Chart.Name }}    
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: helm
    app.openshift.io/runtime: postgres
    app.kubernetes.io/component: database
  name: postgres-keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-keycloak
  strategy:
    type: Recreate
  template:
    metadata:      
      labels:
        app.kubernetes.io/name: postgres-keycloak
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres_keycloak.name }}
                  key: postgres_db
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres_keycloak.name }}
                  key: postgres_password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres_keycloak.name}}
                  key: postgres_user
            - name: TZ
              value: Europe/Madrid
          image: {{ .Values.images.postgres_keycloak.name}}:{{ .Values.images.postgres_keycloak.tag }}
          name: postgres-keycloak
          ports:
            - containerPort: {{ .Values.services.postgres_keycloak.port }}
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-keycloak-data
      hostname: postgres-keycloak
      restartPolicy: Always
      volumes:
        - name: postgres-keycloak-data
          persistentVolumeClaim:
            claimName: postgres-keycloak-data
status: {}
