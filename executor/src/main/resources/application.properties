script.repo.url=https://github.com/marcelomrwin/python-html-generator.git
script.repo.tag=v1.0
script.clonepath=/tmp/python-html-generator
script.name=main.py

## SIMULATE DELAY, CAREFUL BEFORE PRODUCTION
%dev.app.simulate.delay=true
%prod.app.simulate.delay=false

# Minio Config
minio.endpoint=${MINIO_ENDPOINT:http://localhost:9000}
minio.user=${MINIO_ROOT_USER:admin}
minio.password=${MINIO_ROOT_PASSWORD:password}
minio.bucket=news

# Injector API
quarkus.rest-client.injector.url=${INJECTOR_ENDPOINT:http://localhost:8082}
quarkus.rest-client.injector.scope=javax.inject.Singleton
quarkus.rest-client.injector.hostname-verifier=io.quarkus.restclient.NoopHostnameVerifier
quarkus.tls.trust-all=true

# Database Config
quarkus.mongodb.connection-string = ${MONGODB_URL:mongodb://localhost:27017}
quarkus.mongodb.credentials.username=${MONGODB_DB_USER:mongoadmin}
quarkus.mongodb.credentials.password=${MONGODB_DB_PASSWORD:mongopasswd}
quarkus.mongodb.database=${MONGODB_DB_NAME:executordb}
quarkus.mongodb.application-name=executor
quarkus.mongodb.min-pool-size=1
quarkus.mongodb.max-pool-size=10
quarkus.mongodb.tls-insecure=true

quarkus.redis.hosts=${REDIS_ENDPOINT:redis://localhost:6379}

# Kafka config
app.producer.clienId=executor-kafka-client-api
app.producer.acks=-1
app.kafka.max.message.bytes=10485880
kafka.bootstrap.servers=${KAFKA_SERVERS:localhost:19092}
mp.messaging.incoming.job-in.auto.offset.reset=earliest
mp.messaging.incoming.job-in.properties.partition.assignment.strategy=org.apache.kafka.clients.consumer.RoundRobinAssignor
mp.messaging.incoming.job-in.connector=smallrye-kafka
mp.messaging.incoming.job-in.topic=job-request
mp.messaging.incoming.job-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.job-in.value.deserializer=es.upv.posgrado.executor.model.deserializer.JobDTODeserializer
mp.messaging.incoming.job-in.group.id=executor-kafka-client

# job-response
mp.messaging.outgoing.job-out.connector=smallrye-kafka
mp.messaging.outgoing.job-out.topic=job-response
mp.messaging.outgoing.job-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.job-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# hotnews
mp.messaging.incoming.hotnews.auto.offset.reset=earliest
mp.messaging.incoming.hotnews.connector=smallrye-kafka
mp.messaging.incoming.hotnews.topic=recent-news
mp.messaging.incoming.hotnews.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.hotnews.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.hotnews.group.id=executor-kafka-client
mp.messaging.incoming.hotnews.pause-if-no-requests=false
mp.messaging.incoming.hotnews.broadcast=true

# job-compensation
mp.messaging.outgoing.job-compensation.connector=smallrye-kafka
mp.messaging.outgoing.job-compensation.topic=job-compensation
mp.messaging.outgoing.job-compensation.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.job-compensation.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# Logging
quarkus.log.category."org.apache.kafka.common.utils".level=ERROR
quarkus.log.category."org.apache.kafka.clients".level=ERROR