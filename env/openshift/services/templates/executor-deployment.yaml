apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: {{ .Values.services.kafka.name }}  
  labels:
    app.kubernetes.io/name: executor
    app.kubernetes.io/part-of: {{ .Chart.Name }}    
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: Helm
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/component: microservice
  name: executor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: executor  
  template:
    metadata:      
      labels:
        app.kubernetes.io/name: executor
    spec:
      containers:
        - env:
            - name: INJECTOR_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.executor.name }}
                  key: injector_endpoint
            - name: KAFKA_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.executor.name }}
                  key: kafka_servers
            - name: MINIO_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.executor.name }}
                  key: minio_endpoint
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.minio.name}}
                  key: root_password
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.minio.name}}
                  key: root_user
            - name: MONGODB_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.mongodb_executor.name}}
                  key: mongodb_initdb
            - name: MONGODB_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.mongodb_executor.name}}
                  key: mongodb_initdb_password
            - name: MONGODB_DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.mongodb_executor.name}}
                  key: mongodb_initdb_username
            - name: MONGODB_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.executor.name }}
                  key: mongodb_url
            - name: REDIS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.executor.name }}
                  key: redis_endpoint
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.redis.name}}
                  key: password
            - name: TZ
              value: Europe/Madrid
          image: {{ .Values.images.executor.name}}:{{ .Values.images.executor.tag }}
          imagePullPolicy: Always
          name: executor
          resources: {}
      imagePullSecrets:
        - name: marcelosales-default-pull-secret
      serviceAccountName: anyuid-sa
      hostname: executor
      restartPolicy: Always
status: {}
