apiVersion: apps/v1
kind: Deployment
metadata:  
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/part-of: {{ .Chart.Name }}    
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: helm
    app.openshift.io/runtime: kafka
    app.kubernetes.io/component: database
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: kafka
    spec:
      containers:
        - env:
            - name: ALLOW_PLAINTEXT_LISTENER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.kafka.name }}
                  key: allow_plaintext_listener
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.kafka.name }}
                  key: kafka_cfg_advertised_listeners
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE              
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.kafka.name }}
                  key: kafka_cfg_auto_create_topics_enable
            - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.kafka.name }}
                  key: kafka_cfg_default_replication_factor              
            - name: KAFKA_CFG_LISTENERS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.kafka.name }}
                  key: kafka_cfg_listeners
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
            - name: KAFKA_CFG_LOG_RETENTION_HOURS              
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.kafka.name }}
                  key: kafka_cfg_log_retention_hours
            - name: KAFKA_CFG_MESSAGE_MAX_BYTES
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.kafka.name }}
                  key: kafka_cfg_message_max_bytes
            - name: KAFKA_CFG_NUM_PARTITIONS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.kafka.name }}
                  key: kafka_cfg_num_partitions
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: {{ .Values.services.zookeeper.name }}:{{ .Values.services.zookeeper.port }}
          image: {{ .Values.images.kafka.name}}:{{ .Values.images.kafka.tag }}
          livenessProbe:
            exec:
              command:
                - kafka-topics.sh
                - --list
                - --bootstrap-server
                - kafka:{{ .Values.services.kafka.port }}
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 50
          name: kafka
          ports:
            - containerPort: {{ .Values.services.kafka.port }}
          resources: {}
          volumeMounts:
            - mountPath: /bitnami
              name: kafka-data
      hostname: kafka
      restartPolicy: Always
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data
status: {}
