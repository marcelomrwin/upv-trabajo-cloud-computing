version: "3.9"

networks:
  kafka_network:
    name: kafka_network

services:

  minio:
    container_name: Minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    image: quay.io/minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minion_data:/data
    restart: unless-stopped
  postgres-executor:
    image: postgres:13
    container_name: postgres-executor
    hostname: postgres-executor
    ports:
      - 5432:5432
    environment:
      - TZ=Europe/Madrid
      - POSTGRES_DB=executordb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgexecutor_data:/var/lib/postgresql/data
  postgres-injector:
    image: postgres:13
    container_name: postgres-injector
    hostname: postgres-injector
    ports:
      - 5433:5432
    environment:
      - TZ=Europe/Madrid
      - POSTGRES_DB=newsdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pginjector_data:/var/lib/postgresql/data
  postgres-api:
    image: postgres:13
    container_name: postgres-api
    hostname: postgres-api
    ports:
      - 5434:5432
    environment:
      - TZ=Europe/Madrid
      - POSTGRES_DB=apidb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgapi_data:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4:6
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 50
      PGADMIN_CONFIG_FILE_LOG_LEVEL: 50
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    depends_on:
      - postgres-injector
      - postgres-executor
      - postgres-api
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - kafka_network
  kafka:
    image: docker.io/bitnami/kafka:3.3
    container_name: kafka
    hostname: kafka
    restart: always
    ports:
      - 19092:19092
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONNECTIONS_FROM_HOST://:19092
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafka_network
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9080:8080
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
    networks:
      - kafka_network
volumes:
  minion_data:
  pgexecutor_data:
  pginjector_data:
  pgapi_data:
  pgadmin_data:
  kafka_data:
  zookeeper_data: