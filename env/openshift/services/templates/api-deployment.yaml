apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: api
    app.kubernetes.io/part-of: {{ .Chart.Name }}    
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: helm
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/component: microservice
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api
    spec:
      containers:
        - env:
            - name: API_DB_HOST
              value: {{ .Values.services.postgres_api.name}}
            - name: API_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres_api.name }}
                  key: postgres_db
            - name: API_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres_api.name }}
                  key: postgres_password
            - name: API_DB_PORT
              value: "{{ .Values.services.postgres_api.port}}"
            - name: API_DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres_api.name}}
                  key: postgres_user
            - name: API_HTTP_PORT
              value: "{{ .Values.services.api.port }}"
            - name: API_KEYCLOAK_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.api.name}}
                  key: api_keycloak_client_id
            - name: API_KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.api.name}}
                  key: api_keycloak_client_secret
            - name: KAFKA_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.api.name }}
                  key: kafka_servers
            - name: KEYCLOAK_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmaps.api.name }}
                  key: keycloak_endpoint
            - name: TZ
              value: Europe/Madrid
          image: {{ .Values.images.api.name}}:{{ .Values.images.api.tag }}
          name: api
          ports:
            - containerPort: {{ .Values.services.api.port }}
          resources: {}
      hostname: api
      restartPolicy: Always
status: {}
