%dev.quarkus.http.port=8083
quarkus.http.test-port=9083
app.kafka.topic.job.out.name=job-request
app.producer.clienId=kafka-client-api
app.producer.acks=-1

# Database Config
quarkus.datasource.db-kind=postgresql 
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5434/apidb
quarkus.datasource.jdbc.max-size=10
quarkus.hibernate-orm.database.generation=update

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:db
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
%test.quarkus.hibernate-orm.sql-load-script=import-test.sql

%test.quarkus.log.level=DEBUG
%test.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.log.format-sql=true
%test.quarkus.log.category."io.quarkus.bootstrap.classloading".min-level=WARNING

# Kafka config
kafka.bootstrap.servers=localhost:19092
mp.messaging.connector.smallrye-kafka.partitions=3

# Receive
mp.messaging.incoming.hotnews.auto.offset.reset=earliest
mp.messaging.incoming.hotnews.connector=smallrye-kafka
mp.messaging.incoming.hotnews.topic=recent-news
mp.messaging.incoming.hotnews.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.hotnews.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.hotnews.group.id=api-kafka-client
mp.messaging.incoming.hotnews.pause-if-no-requests=false
mp.messaging.incoming.hotnews.broadcast=true

mp.messaging.incoming.jobresponse.auto.offset.reset=earliest
mp.messaging.incoming.jobresponse.connector=smallrye-kafka
mp.messaging.incoming.jobresponse.topic=job-response
mp.messaging.incoming.jobresponse.properties.partition.assignment.strategy=org.apache.kafka.clients.consumer.RoundRobinAssignor
mp.messaging.incoming.jobresponse.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.jobresponse.value.deserializer=es.upv.posgrado.api.model.deserializer.JobDeserializer
mp.messaging.incoming.jobresponse.group.id=api-kafka-client
mp.messaging.incoming.jobresponse.pause-if-no-requests=false
mp.messaging.incoming.jobresponse.broadcast=true

# Publish
mp.messaging.outgoing.job-out.connector=smallrye-kafka
mp.messaging.outgoing.job-out.topic=job-request
mp.messaging.outgoing.job-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.job-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer