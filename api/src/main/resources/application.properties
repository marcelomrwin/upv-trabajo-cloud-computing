%dev.quarkus.http.port=${API_HTTP_PORT:8083}
quarkus.http.test-port=9083
app.kafka.topic.job.out.name=job-request
app.producer.clienId=kafka-client-api
app.producer.acks=-1

quarkus.http.cors=true
quarkus.http.cors.origins=*

## OpenAPI
quarkus.smallrye-openapi.path=/openapi
quarkus.smallrye-openapi.info-title=News API
%dev.quarkus.smallrye-openapi.info-title=News API (development)
%test.quarkus.smallrye-openapi.info-title=News API (test)
quarkus.smallrye-openapi.info-version=1.0.0
quarkus.smallrye-openapi.info-description=Cloud Computing course project
quarkus.smallrye-openapi.info-terms-of-service=free to use
quarkus.smallrye-openapi.info-contact-email=mddasil@posgrado.upv.es
quarkus.smallrye-openapi.info-contact-name=Marcelo or Giovanni
quarkus.smallrye-openapi.info-contact-url=http://www.upv.es/es
quarkus.smallrye-openapi.info-license-name=Apache 2.0
quarkus.smallrye-openapi.info-license-url=https://www.apache.org/licenses/LICENSE-2.0.html
mp.openapi.extensions.smallrye.operationIdStrategy=METHOD

# Database Config
quarkus.datasource.db-kind=postgresql 
quarkus.datasource.username=${API_DB_USER:postgres}
quarkus.datasource.password=${API_DB_PASSWORD:postgres}
quarkus.datasource.jdbc.url=jdbc:postgresql://${API_DB_HOST:localhost}:${API_DB_PORT:5434}/${API_DB_NAME:apidb}
quarkus.datasource.jdbc.max-size=10
quarkus.hibernate-orm.database.generation=update

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:db
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
%test.quarkus.hibernate-orm.sql-load-script=import-test.sql

%test.quarkus.log.level=DEBUG
%test.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.log.format-sql=true
%test.quarkus.log.category."io.quarkus.bootstrap.classloading".min-level=WARNING

# Keycloak
quarkus.oidc.auth-server-url=${KEYCLOAK_ENDPOINT:http://localhost:8180/realms/cc}
quarkus.oidc.client-id=${API_KEYCLOAK_CLIENT_ID:api-backend}
quarkus.oidc.credentials.secret=${API_KEYCLOAK_CLIENT_SECRET}
quarkus.oidc.tls.verification=none
quarkus.keycloak.devservices.enabled=false

# Kafka config
kafka.bootstrap.servers=${KAFKA_SERVERS:localhost:19092}

# Receive recent news
mp.messaging.incoming.hotnews.auto.offset.reset=earliest
mp.messaging.incoming.hotnews.connector=smallrye-kafka
mp.messaging.incoming.hotnews.topic=recent-news
mp.messaging.incoming.hotnews.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.hotnews.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.hotnews.group.id=api-kafka-client
mp.messaging.incoming.hotnews.pause-if-no-requests=false
mp.messaging.incoming.hotnews.broadcast=true
## Receive job-response
mp.messaging.incoming.jobresponse.auto.offset.reset=earliest
mp.messaging.incoming.jobresponse.connector=smallrye-kafka
mp.messaging.incoming.jobresponse.topic=job-response
mp.messaging.incoming.jobresponse.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.jobresponse.value.deserializer=es.upv.posgrado.api.model.deserializer.JobDeserializer
mp.messaging.incoming.jobresponse.group.id=api-kafka-client
mp.messaging.incoming.jobresponse.pause-if-no-requests=false
mp.messaging.incoming.jobresponse.broadcast=true

## Receive job-statistics
mp.messaging.incoming.job-stats.auto.offset.reset=earliest
mp.messaging.incoming.job-stats.connector=smallrye-kafka
mp.messaging.incoming.job-stats.topic=job-statistics
mp.messaging.incoming.job-stats.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.job-stats.value.deserializer=es.upv.posgrado.api.model.deserializer.MonitoringResponseDeserializer
mp.messaging.incoming.job-stats.group.id=api-kafka-client
mp.messaging.incoming.job-stats.pause-if-no-requests=false
mp.messaging.incoming.job-stats.broadcast=true

# Publish
mp.messaging.outgoing.job-out.connector=smallrye-kafka
mp.messaging.outgoing.job-out.topic=job-request
mp.messaging.outgoing.job-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.job-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer